"use strict";
/*
 * Copyright (c) 2022, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PackageVersionDisplayAncestryCommand = void 0;
const os = require("os");
const command_1 = require("@salesforce/command");
const core_1 = require("@salesforce/core");
// Import i18n messages
core_1.Messages.importMessagesDirectory(__dirname);
const messages = core_1.Messages.loadMessages('@salesforce/plugin-packaging', 'package_displayancestry');
class PackageVersionDisplayAncestryCommand extends command_1.SfdxCommand {
    // eslint-disable-next-line @typescript-eslint/require-await
    async run() {
        throw new Error('Beta command not yet implemented');
    }
}
exports.PackageVersionDisplayAncestryCommand = PackageVersionDisplayAncestryCommand;
PackageVersionDisplayAncestryCommand.description = messages.getMessage('cliDescription');
PackageVersionDisplayAncestryCommand.examples = messages.getMessage('examples').split(os.EOL);
PackageVersionDisplayAncestryCommand.showProgress = false;
PackageVersionDisplayAncestryCommand.varargs = false;
PackageVersionDisplayAncestryCommand.requiresDevhubUsername = true;
PackageVersionDisplayAncestryCommand.flagsConfig = {
    // --json is configured automatically
    package: command_1.flags.string({
        char: 'p',
        description: messages.getMessage('package'),
        longDescription: messages.getMessage('packageLong'),
        required: true,
    }),
    dotcode: command_1.flags.boolean({
        description: messages.getMessage('dotcode'),
        longDescription: messages.getMessage('dotcodeLong'),
    }),
    verbose: command_1.flags.builtin({
        description: messages.getMessage('verbose'),
        longDescription: messages.getMessage('verboseLong'),
    }),
};
//# sourceMappingURL=displayancestry.js.map