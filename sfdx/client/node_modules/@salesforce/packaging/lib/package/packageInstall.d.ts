import { Connection } from '@salesforce/core';
import { Optional } from '@salesforce/ts-types';
import { Duration } from '@salesforce/kit';
import { PackagingSObjects } from '../interfaces';
import { PackageInstallOptions, PackageInstallCreateRequest } from '../interfaces/packagingInterfacesAndType';
import PackageInstallRequest = PackagingSObjects.PackageInstallRequest;
export declare function installPackage(connection: Connection, pkgInstallCreateRequest: PackageInstallCreateRequest, options?: PackageInstallOptions): Promise<PackageInstallRequest>;
/**
 * Returns an array of RSS and CSP external sites for the package.
 *
 * @param connection The `Connection` object to the org.
 * @param subscriberPackageVersionId The ID of the subscriber package version (begins with "04t")
 * @param installationKey The installation key (if any) for the subscriber package version.
 * @returns an array of RSS and CSP site URLs, or undefined if the package doesn't have any.
 */
export declare function getExternalSites(connection: Connection, subscriberPackageVersionId: string, installationKey?: string): Promise<Optional<string[]>>;
export declare function getStatus(connection: Connection, installRequestId: string): Promise<PackageInstallRequest>;
export declare function waitForPublish(connection: Connection, subscriberPackageVersionId: string, timeout: number | Duration, installationKey?: string): Promise<void>;
