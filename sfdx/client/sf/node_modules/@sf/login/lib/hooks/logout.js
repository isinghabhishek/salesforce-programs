"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
const core_1 = require("@salesforce/core");
const sf_plugins_core_1 = require("@salesforce/sf-plugins-core");
class OrgDeauthorizer extends sf_plugins_core_1.Deauthorizer {
    async find() {
        this.remover = await core_1.AuthRemover.create();
        const stateAggregator = await core_1.StateAggregator.getInstance();
        const auths = this.remover.findAllAuths();
        for (const auth of Object.values(auths)) {
            const aliases = stateAggregator.aliases.getAll(auth.username);
            if (aliases)
                auth.aliases = aliases;
        }
        return auths;
    }
    async remove(username) {
        try {
            await this.remover.removeAuth(username);
            return true;
        }
        catch {
            return false;
        }
    }
}
// eslint-disable-next-line @typescript-eslint/require-await
const hook = async function () {
    return new OrgDeauthorizer();
};
exports.default = hook;
//# sourceMappingURL=logout.js.map