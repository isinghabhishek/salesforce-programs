"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Get = void 0;
/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
const core_1 = require("@oclif/core");
const core_2 = require("@salesforce/core");
const config_1 = require("../../config");
core_2.Messages.importMessagesDirectory(__dirname);
const messages = core_2.Messages.loadMessages('@salesforce/plugin-config', 'get');
class Get extends config_1.ConfigCommand {
    async run() {
        const { argv, flags } = await this.parse(Get);
        if (!argv || argv.length === 0) {
            throw messages.createError('error.NoConfigKeysFound');
        }
        else {
            const aggregator = await core_2.ConfigAggregator.create();
            argv.forEach((configName) => {
                try {
                    this.pushSuccess(aggregator.getInfo(configName, true));
                }
                catch (err) {
                    this.pushFailure(configName, err);
                }
            });
            if (!this.jsonEnabled()) {
                this.output('Get Config', flags.verbose);
            }
            return this.responses;
        }
    }
}
exports.Get = Get;
Get.description = messages.getMessage('description');
Get.summary = messages.getMessage('summary');
Get.examples = messages.getMessages('examples');
Get.strict = false;
Get.flags = {
    verbose: core_1.Flags.boolean({
        summary: messages.getMessage('flags.verbose.summary'),
    }),
};
Get.configurationVariablesSection = config_1.CONFIG_HELP_SECTION;
//# sourceMappingURL=get.js.map