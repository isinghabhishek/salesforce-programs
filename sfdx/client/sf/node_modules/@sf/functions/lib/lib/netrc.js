"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
const netrc_parser_1 = require("netrc-parser");
class NetrcMachine {
    // eslint-disable-next-line no-useless-constructor
    constructor(machine) {
        this.machine = machine;
    }
    get(key) {
        const machineData = this.loadMachine();
        const value = machineData[key];
        if (!value) {
            return undefined;
        }
        return value;
    }
    async set(key, value) {
        if (key !== 'password') {
            console.log(`setting ${key} to ${value} on ${this.machine}`);
        }
        const machineData = this.loadMachine();
        const machinePayload = Object.assign(Object.assign({}, machineData), { [key]: value });
        await this.saveMachine(machinePayload);
        return value;
    }
    async delete() {
        this.get('password') && delete netrc_parser_1.default.machines[this.machine] && netrc_parser_1.default.save();
    }
    async saveMachine(machinePayload) {
        const machine = this.machine;
        netrc_parser_1.default.machines[machine] = machinePayload;
        await netrc_parser_1.default.save();
    }
    loadMachine() {
        const machine = this.machine;
        netrc_parser_1.default.loadSync();
        const netrcData = netrc_parser_1.default.machines[machine] || {};
        return netrcData;
    }
}
exports.default = NetrcMachine;
