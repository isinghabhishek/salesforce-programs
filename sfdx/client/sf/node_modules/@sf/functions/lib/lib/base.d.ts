/// <reference types="node" />
import { URL } from 'url';
import { Interfaces } from '@oclif/core';
import { SfCommand } from '@salesforce/sf-plugins-core';
import { StateAggregator, Org } from '@salesforce/core';
import APIClient from './api-client';
import { SfdcAccount } from './sfdc-types';
export default abstract class Command extends SfCommand<any> {
    protected static TOKEN_BEARER_KEY: string;
    protected static TOKEN_REFRESH_KEY: string;
    protected stateAggregator: StateAggregator;
    private _client?;
    private _auth?;
    protected outputJSON: boolean;
    protected init(): Promise<void>;
    protected get identityUrl(): URL;
    protected get username(): string | undefined;
    protected resetClientAuth(): void;
    protected get auth(): string;
    protected get client(): APIClient;
    protected catch(err: any): any;
    protected fetchAccount(): Promise<SfdcAccount>;
    protected isFunctionsEnabled(org: Org): Promise<boolean>;
    private fetchConfirmationValue;
    protected confirmRemovePrompt(type: 'environment', name: string, confirm?: string | string[], warningMessage?: string): Promise<void>;
    error(input: string | Error, options: {
        code?: string;
        exit: false;
    } & Interfaces.PrettyPrintableError): void;
    error(input: string | Error, options?: {
        code?: string;
        exit?: number;
    } & Interfaces.PrettyPrintableError): never;
    protected postParseHook(flags: {
        [name: string]: string | boolean | number | string[] | undefined;
    }): void;
}
