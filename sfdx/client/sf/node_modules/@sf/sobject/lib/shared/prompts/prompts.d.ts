import { NamedPackageDir } from '@salesforce/core';
import { Question, ListQuestion } from 'inquirer';
import { ValueSet } from 'jsforce/api/metadata';
export declare const makeNameApiCompatible: (input: string) => string;
declare type ObjectType = 'CustomObject' | 'PlatformEvent' | 'CustomField';
export declare const directoryPrompt: (packageDirs: NamedPackageDir[]) => Promise<ListQuestion>;
export declare const pluralPrompt: (label: string) => Question;
export declare const apiNamePrompt: (label: string, objectType: ObjectType) => Question;
export declare const descriptionPrompt: {
    type: string;
    message: string;
    name: string;
    validate: (input: string) => true | string;
};
/** Ask about the name/type for the Name field, with a followup for AutoNumber format if AutoNumber is chosen  */
export declare const namePrompts: (label: string) => Array<Question | ListQuestion>;
/**
 *
 * @param packageDirs
 * @param name The "name" property of the Inquirer answer object.  Supports use of the question for multiple scenarios
 */
export declare const objectPrompt: (packageDirs: NamedPackageDir[], name?: 'object' | 'referenceTo', message?: string) => Promise<ListQuestion>;
export declare const integerValidation: (value: number, min: number, max: number) => true | string;
/**
 * recursively keep adding picklist values until the user says to stop
 */
export declare const picklistPrompts: () => Promise<Omit<ValueSet, 'valueSettings'>>;
export {};
