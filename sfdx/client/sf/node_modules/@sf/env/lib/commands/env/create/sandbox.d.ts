import { Org, SandboxProcessObject } from '@salesforce/core';
import { Duration } from '@salesforce/kit';
import * as Interfaces from '@oclif/core/lib/interfaces';
import { SandboxCommandBase } from '../../../shared/sandboxCommandBase';
declare type CmdFlags = {
    'definition-file': string;
    'set-default': boolean;
    alias: string;
    async: boolean;
    'poll-interval': Duration;
    wait: Duration;
    name: string;
    'license-type': string;
    'no-prompt': boolean;
    'target-org': Org;
    clone: string;
    json: boolean;
    'no-track-source': boolean;
};
export declare enum SandboxLicenseType {
    developer = "Developer",
    developerPro = "Developer_Pro",
    partial = "Partial",
    full = "Full"
}
export default class CreateSandbox extends SandboxCommandBase<SandboxProcessObject> {
    static summary: string;
    static description: string;
    static examples: string[];
    static flags: Interfaces.FlagInput<Omit<CmdFlags, 'json'>>;
    static readonly state = "beta";
    protected readonly lifecycleEventNames: string[];
    private flags;
    run(): Promise<SandboxProcessObject>;
    protected getCheckSandboxStatusParams(): string[];
    private lowerToUpper;
    private createSandboxRequest;
    private createSandbox;
    private initSandboxProcessData;
    private readJsonDefFile;
    private confirmSandboxReq;
    private validateFlags;
    private getSourceId;
}
export {};
